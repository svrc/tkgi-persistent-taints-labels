#!/bin/sh

# Ensure the kubelet is up on this node before relabelling and re-tainting
/var/vcap/jobs/kubelet/bin/ensure_kubelet_up_and_running

# The bosh.id label is the VM guid and is persistent across recreates 
NODE_NAME=$(/var/vcap/packages/kubernetes/bin/kubectl --kubeconfig /var/vcap/jobs/kubelet/config/kubeconfig get node -l bosh.id=<%= spec.id %> | sed 1d | awk '{print $1}')

if [  -f "/var/vcap/store/watch-nodes-tl/REFRESH" ]; then

echo "Refreshing node taints and labels"
 
  # Grab all the saved labels, and remove any whitelisted labels that are set by the PKS system

  LABELS=$(/var/vcap/packages/jq/bin/jq -r '.labels | del(."beta.kubernetes.io\/arch"?) | del(."bosh.id"?) | del(."bosh.zone"?) | del(."failure-domain.beta.kubernetes.io\/zone"?) | del(."kubernetes.io\/arch"?) | del(."kubernetes.io\/hostname"?) | del(."kubernetes.io\/os"?) | del(."beta.kubernetes.io\/os"?) | del(."topology.kubernetes.io\/zone"?) | del(."pks-system\/cluster.name"?) | del(."pks-system/cluster.uuid"?) | del(."spec.ip"?) | to_entries | .[] | .key + "=" + .value ' /var/vcap/store/watch-nodes-tl/labels-taints.json)

  # Relabel any remaining saved labels on the current node

  for label in $LABELS; do
    echo "Labeling $NODE_NAME with $label"
    /var/vcap/packages/kubernetes/bin/kubectl --kubeconfig /var/vcap/jobs/kubelet/config/kubeconfig  label node $NODE_NAME "$label"
  done

  TAINTS=$(/var/vcap/packages/jq/bin/jq -r '.taints | to_entries | .[].value | .key + "=" + .value + ":" + .effect' /var/vcap/store/watch-nodes-tl/labels-taints.json)
  for taint in $TAINTS; do
    echo "Tainting $NODE_NAME with $taint"
    /var/vcap/packages/kubernetes/bin/kubectl --kubeconfig /var/vcap/jobs/kubelet/config/kubeconfig taint node $NODE_NAME "$taint"
  done

  rm -f /var/vcap/store/watch-nodes-tl/REFRESH
fi

echo "Watching for changes on BOSH job id <%= spec.id %> , Kubernetes node name $NODE_NAME";
while true; do
     LABELS_TAINTS=$(/var/vcap/packages/kubernetes/bin/kubectl --kubeconfig /var/vcap/jobs/kubelet/config/kubeconfig get node -l bosh.id=<%= spec.id %> -o json | /var/vcap/packages/jq/bin/jq -e ".items[] | if (.spec.taints != null) then {"labels": .metadata.labels, "taints": .spec.taints } else {"labels": .metadata.labels } end")
     if [ "$LABELS_TAINTS" ]; then 
        echo $LABELS_TAINTS > /var/vcap/store/watch-nodes-tl/labels-taints.json
     else
        echo "Skipping empty kubectl response"
     fi

    sleep 15
done
